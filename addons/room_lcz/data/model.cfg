class CfgSkeletons
{
    class Default
    {
        isDiscrete = 1;
        skeletonInherit = "";
        skeletonBones[] = {};
    };
	
    class SCP_CB_LCZ_Hallway_Two_3_skeleton: Default
    {
        isDiscrete = 0;
        skeletonInherit = "Default";
        skeletonBones[] =
        {
            "Fan",               ""
        };
    };

	class SCP_CB_LCZ_Hallway_Four_3_skeleton: Default 
	{
        isDiscrete = 0;
        skeletonInherit = "Default";
        skeletonBones[] =
        {
            "Door_1",               "",
            "Door_Handle_1",        "Door_1",
            "Door_Handle_1_axis",   "Door_1",

            "Glass_1_hide",         "",
            "Glass_2_hide",         "Door_1",
            "Glass_3_hide",         "Door_1",
        };
    };
};

class CfgModels
{
	class Default
    {
        sectionsInherit="";
        sections[] = {};
        skeletonName = "";
    };

    class Hallway_Two_3: Default
    {
        skeletonName = "SCP_CB_LCZ_Hallway_Two_3_skeleton";
        class Animations
		{
            class Fan_rot
            {
				type			= "rotation";
				source			= "Fan_source";
				selection		= "Fan";
				axis			= "fan_Axis";
				memory			= 1;
				minValue		= 0;
				maxValue		= 1;
				angle0			= 0;
				angle1			= (rad 360);
			};
        };
    };

    class Hallway_Four_3: Default // class name must be the same as name of p3d
	{
		skeletonName = "SCP_CB_LCZ_Hallway_Four_3_skeleton"; // Set to use above defined skeleton.
        sections[] =
		{
			"Glass_1_hide",
			"Glass_2_hide",
			"Glass_3_hide",
		};
        sectionsInherit = "";	
        class Animations
		{
            class Door_1_rot
            {
				type			= "rotation";
				source			= "Door_1_source";
				selection		= "Door_1";
				axis			= "Door_1_axis";
				memory			= 1;
				minValue		= 0.1;
				maxValue		= 1;
				angle0			= 0;
				angle1			= (rad 110); // "rad" converts from degrees to radians
			};
            class Door_Handle_1_rot_1: Door_1_rot
            {
                selection		= "Door_Handle_1";
                axis			= "Door_Handle_1_axis";
                minValue		= 0;
                maxValue		= 0.1;
                angle1			= (rad 50); // Press handle down
            };
            class Door_Handle_1_rot_2: Door_Handle_1_rot_1
            {
                minValue		= 0.1;
                maxValue		= 0.4;
                angle1			= -(rad 50); // Release handle to go up
            };

			class Glass_1_hide
			{
				type			= "hide";
				source			= "Glass_1_source"; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= "Glass_1_hide"; // Selection containing glass pane.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.99999; // Threshold for switching the glass pane for glass shards.
			};
            class Glass_2_hide: Glass_1_hide
			{
				source			= "Glass_2_source";
				selection		= "Glass_2_hide";
			};
            class Glass_3_hide: Glass_1_hide
			{
				source			= "Glass_3_source";
				selection		= "Glass_3_hide";
			};
        };
    };
};